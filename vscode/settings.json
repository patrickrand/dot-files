{
	//-------- Editor configuration --------
	// Controls the font family.
	"editor.fontFamily": "'Consolas','Courier New', monospace, 'Droid Sans Fallback'",
	// Controls the font size.
	"editor.fontSize": 15,
	// Controls the rendering size of tabs in characters. Accepted values: "auto", 2, 4, 6, etc. If set to "auto", the value will be guessed when a file is opened.
	"editor.tabSize": 4,
	// Controls if the editor will insert spaces for tabs. Accepted values:  "auto", true, false. If set to "auto", the value will be guessed when a file is opened.
	"editor.insertSpaces": true,
	// Controls if selections have rounded corners
	"editor.roundedSelection": false,
	// Controls if quick suggestions should show up or not while typing
	"editor.quickSuggestions": true,
	// Controls the delay in ms after which quick suggestions will show up
	"editor.quickSuggestionsDelay": 10,
	// Controls if the editor should automatically close brackets after opening them
	"editor.autoClosingBrackets": true,
	// Controls if the editor should automatically format the line after typing
	"editor.formatOnType": false,
	// Controls if suggestions should automatically show up when typing trigger characters
	"editor.suggestOnTriggerCharacters": true,
	// Controls whether the editor should highlight similar matches to the selection
	"editor.selectionHighlight": true,
	// Controls the cursor blinking animation, accepted values are 'blink', 'visible', and 'hidden'
	"editor.cursorBlinking": "blink",
	// Controls if the diff editor shows the diff side by side or inline
	"diffEditor.renderSideBySide": true,
	// Controls if the diff editor shows changes in leading or trailing whitespace as diffs
	"diffEditor.ignoreTrimWhitespace": true,
	//-------- Window configuration --------
	// When enabled, will open files in a new window instead of reusing an existing instance.
	"window.openFilesInNewWindow": true,
	// Controls how folders are being reopened after a restart. Select 'none' to never reopen a folder, 'one' to reopen the last folder you worked on or 'all' to reopen all folders of your last session.
	"window.reopenFolders": "one",
	// Adjust the zoom level of the window. The original size is 0 and each increment above or below represents zooming 20% larger or smaller.
	"window.zoomLevel": 0,
	
	// "workbench.editor.enablePreview": false,
    "workbench.editor.enablePreviewFromQuickOpen": false,
	//-------- Files configuration --------
	// Configure glob patterns for excluding files and folders.
	"files.exclude": {
		"**/.git": true,
		"**/.DS_Store": true,
		"**/.project": true,
		"**/.bloop": true,
		"**/.metals": true,
		"**/.ammonite": true,
		"**/.tox": true,
		"**/.bigquery": true,
		"**/.scio-repl": true,
		"**/target": true,
		"project/project": true
	},
	"files.watcherExclude": {
		"**/.git/objects/**": true,
		"**/node_modules/**": true,
		"**/vendor/**": true,
		"**/dist/**": true,
		"**/tmp/**": true,
		"**/tools/**": true,
		"**/.bloop": true,
		"**/.metals": true,
		"**/.ammonite": true,
		"**/.tox": true,
		"**/.bigquery": true,
		"**/.scio-repl": true,
		"**/target": true,
		"project/project": true
	},
	// The default character set encoding to use when reading and writing files.
	"files.encoding": "utf8",
	// The default end of line character.
	"files.eol": "\n",
	// When enabled, will trim trailing whitespace when you save a file.
	"files.trimTrailingWhitespace": false,
	// Controls auto save of dirty files. Accepted values:  "off", "afterDelay", "onFocusChange". If set to "afterDelay" you can configure the delay in "files.autoSaveDelay".
	"files.autoSave": "onFocusChange",
	// Controls the delay in ms after which a dirty file is saved automatically. Only applies when "files.autoSave" is set to "afterDelay"
	// "files.autoSaveDelay": 1000,
	//-------- File Explorer configuration --------
	// Number of editors shown in the Open Editors pane. Set it to 0 to hide the pane.
	"explorer.openEditors.visible": 0,
	// Controls if the height of the open editors section should adapt dynamically to the number of elements or not.
	"explorer.openEditors.dynamicHeight": true,
	// Controls if the explorer should automatically reveal files when opening them.
	"explorer.autoReveal": true,
	// Path to the git executable
	"git.path": null,
	// Whether auto fetching is enabled.
	"git.autofetch": false,
	//-------- Search configuration --------
	// Configure glob patterns for excluding files and folders in searches. Inherits all glob patterns from the file.exclude setting.
	"search.exclude": {
		"**/node_modules": true,
		"**/bower_components": true
	},
	//-------- Markdown preview configuration --------
	// A list of URLs or local paths to CSS style sheets to use from the markdown preview.
	"markdown.styles": [],

	//-------- Go configuration --------
	// Run 'go build'/'go test' on save.
	"go.buildOnSave": true,
	// Flags to `go build`/`go test` used during build-on-save or running tests. (e.g. ['-ldflags="-s"'])
	"go.buildFlags": [],
	// Run 'golint' on save.
	"go.lintOnSave": true,
	// Flags to pass to `golint` (e.g. ['-min_confidenc=.8'])
	"go.lintFlags": [],
	// Run 'go tool vet' on save.
	"go.vetOnSave": true,
	// Flags to pass to `go tool vet` (e.g. ['-all', '-shadow'])
	"go.vetFlags": [],
	// Pick 'gofmt', 'goimports' or 'goreturns' to run on format.
	"go.formatTool": "goimports",
	// Complete functions with their parameter signature
	"go.useCodeSnippetsOnFunctionSuggest": true,
	// Specifies the GOPATH to use when no environment variable is set.
	"go.gopath": "~/go",
	// Specifies the GOROOT to use when no environment variable is set.
	"go.goroot": "/usr/local/go",
	// [EXPERIMENTAL] Run formatting tool on save.
	"go.formatOnSave": true,
	// Run 'go test -coverprofile' on save
	"go.coverOnSave": false,
	// Specifies the timeout for go test in ParseDuration format.
	"go.testTimeout": "30s",
	"go.gocodeAutoBuild": true,

	//------- Integrated Terminal -------
	"terminal.integrated.shell.linux": "/bin/zsh",
	"terminal.integrated.shell.osx": "/bin/zsh",
    "terminal.integrated.fontSize": 15,
	"terminal.integrated.fontFamily": "Consolas",
    "vsicons.dontShowNewVersionMessage": true,
    "vsicons.projectDetection.autoReload": true,
	"workbench.colorTheme": "Life on mars",

	// override "default" settings introduced in v1.13
	"editor.minimap.enabled": false,
	"editor.renderIndentGuides": false,
	"editor.dragAndDrop": false,
	"java.semanticHighlighting.enabled": true,
	"editor.suggestSelection": "first",
	"vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
	"java.format.settings.url": "https://raw.githubusercontent.com/google/styleguide/gh-pages/eclipse-java-google-style.xml",
	"java.codeGeneration.generateComments": true,
	"java.project.importOnFirstTimeStartup": "automatic",
	"java.autobuild.enabled": true,
	"java.configuration.runtimes": [
		{
		  "name": "JavaSE-1.8",
		  "path": "/Users/prand/.jenv/versions/1.8.0.262"
		},
		{
		  "name": "JavaSE-11",
		  "path": "/Users/prand/.jenv/versions/11.0.8",
		  "default":  true
		 }
	  ],
	"java.completion.importOrder": [

		"java",
		"javax",
		"com",
		"org"
	],
	"java.import.gradle.enabled": false,
	"java.configuration.maven.userSettings": "/Users/prand/.m2/settings.xml",
	"java.configuration.checkProjectSettingsExclusions": false,
	"java.maven.updateSnapshots": false,
	"java.format.enabled": true,
	"protoc": {
		"options": [
			"--proto_path=${workspaceFolderBasename}"
		]
	},
	"[json]": {
		"editor.defaultFormatter": "vscode.json-language-features"
	},
	"workbench.iconTheme": "vscode-icons"
}